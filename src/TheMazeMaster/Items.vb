Friend Module Items
    Friend ITEM_TYPES As New List(Of String)
    Function CREATE_ITEM(IT As String) As Integer
        'TODO: FIRST LOOK FOR EMPTY ITEM
        Dim I = ITEM_TYPES.count
        ITEM_TYPES.Add(IT)
        Return I
    End Function
End Module
' ITEM_MAZE_COLUMNS=DICT()
' ITEM_MAZE_ROWS=DICT()
' ITEM_ROOM_COLUMNS=DICT()
' ITEM_ROOM_ROWS=DICT()
' DEF PLACE_ITEM(I)
'     IF EXISTS(ITEM_MAZE_COLUMNS,I) THEN
'         IT = ITEM_TYPES(I)
'         MX=ITEM_MAZE_COLUMNS(I)
'         MY=ITEM_MAZE_ROWS(I)
'         X=ITEM_ROOM_COLUMNS(I)
'         Y=ITEM_ROOM_ROWS(I)
'         TI=ITEMTYPE_TILE_INDICES(IT)
' TRACE()
' PRINT;
' PRINT IT," ",MX," ",MY," ",X," ",Y," ",TI;
'         RM=GET_ROOM_MAP(MX,MY)
'         MSET RM,2,X,Y,TI
'     ENDIF
' ENDDEF
' DEF REMOVE_ITEM(I)
'     IF EXISTS(ITEM_MAZE_COLUMNS,I) THEN
'         IT = ITEM_TYPES(I)
'         MX=ITEM_MAZE_COLUMNS(I)
'         MY=ITEM_MAZE_ROWS(I)
'         X=ITEM_ROOM_COLUMNS(I)
'         Y=ITEM_ROOM_ROWS(I)
'         TI=TILE_EMPTY
'         RM=GET_ROOM_MAP(MX,MY)
'         MSET RM,2,X,Y,TI
'     ENDIF
' ENDDEF
' DEF CREATE_ROOM_ITEM(IT,MX,MY,X,Y)
'     I=CREATE_ITEM(IT)
'     ITEM_MAZE_COLUMNS(I)=MX
'     ITEM_MAZE_ROWS(I)=MY
'     ITEM_ROOM_COLUMNS(I)=X
'     ITEM_ROOM_ROWS(I)=Y
'     RETURN I
' ENDDEF
' DEF ITEM_ROLL_ATTACK(I)
'     IT=ITEM_TYPES(I)
'     RETURN ITEMTYPE_ROLL_ATTACK(IT)
' ENDDEF
' DEF FIND_ITEM(MX,MY,X,Y)
'     I=ITERATOR(ITEM_MAZE_COLUMNS)
'     WHILE MOVE_NEXT(I)
'         II=GET(I)
'         CMX=VAL(I)
'         CMY=ITEM_MAZE_ROWS(II)
'         CX=ITEM_ROOM_COLUMNS(II)
'         CY=ITEM_ROOM_ROWS(II)
'         IF MX=CMX AND MY=CMY AND X=CX AND Y=CY THEN
'             RETURN II
'         ENDIF
'     WEND
'     RETURN -1
' ENDDEF
' DEF ITEM_CLEAR_ROOM(II)
'     REMOVE(ITEM_MAZE_COLUMNS,II)
'     REMOVE(ITEM_MAZE_ROWS,II)
'     REMOVE(ITEM_ROOM_COLUMNS,II)
'     REMOVE(ITEM_ROOM_ROWS,II)
' ENDDEF
' DEF ITEM_DESTROY(II)
'     ITEM_TYPES(II)=ITEMTYPE_NONE
' ENDDEF